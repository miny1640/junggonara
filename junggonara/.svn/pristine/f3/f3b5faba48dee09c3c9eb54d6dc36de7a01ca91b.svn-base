package exe.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import exe.entity.BoardEntity;

public class BoardDAO extends CommonDAO {
	public ArrayList<BoardEntity> selectAll(){
		ArrayList<BoardEntity> list = new ArrayList<BoardEntity>(); 
		String query = "select * from jg_board";
		
		Connection con =null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		try {
			con=ds.getConnection();
			stmt=con.prepareStatement(query);
			rs=stmt.executeQuery();
			
			while(rs.next()) {
				BoardEntity board = new BoardEntity();
				board.setBr_num(rs.getInt("br_num"));
				board.setMb_id(rs.getInt("mb_id"));
				board.setBr_title(rs.getString("br_title"));
				board.setBk_code(rs.getString("bk_code"));
				board.setBr_content(rs.getString("br_content"));
				board.setBr_price(rs.getInt("br_price"));
				board.setSale_purchase(rs.getString("sale_purchase"));
				board.setPurchase_done(rs.getString("purchase_done"));
				board.setHit(rs.getInt("hit"));
				board.setWrite_date(rs.getDate("write_date"));
				board.setUpFile(rs.getString("upFile"));
				
				list.add(board);
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally {
			close(rs);
			close(stmt);
			close(con);
		}
		return list;
	}
	
	public int totalRow(String column, String keyword) {
		int totalRow = 0;
		
		String query = "select count(*) from jg_board "
				+ "where " + column + " like ?";

		Connection con = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		try {
			con = ds.getConnection();
			stmt = con.prepareStatement(query);
			stmt.setString(1, "%"+keyword+"%");
			
			rs = stmt.executeQuery();
			rs.next();
			
			totalRow = rs.getInt(1);
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			close(rs);
			close(stmt);
			close(con);
		}

		return totalRow;
	}

	public boolean delete(String br_num, int mb_id) {
		boolean result = false;
		int tmp =0;
		String query = "delete from jg_board where br_num = ? and mb_id =?";
		
		Connection con=null;
		PreparedStatement stmt=null;
		
		try {
			con = ds.getConnection();
			stmt = con.prepareStatement(query);
			stmt.setInt(1, Integer.parseInt(br_num));
			stmt.setInt(2, mb_id);
			
			tmp = stmt.executeUpdate();
			if(tmp==0) {
				result=false;
			}else {
				result=true;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			close(stmt);
			close(con);
		}
		return result;
	}

	public boolean insert(BoardEntity board) {
		boolean result = false;
		int tmp =0;
		String query = "insert into jg_board "
				+ "values(seq_board.nextval, ?, ?, ?, ?, ?, ?, 'X', 0, sysdate, ?)";
		
		Connection con = null;
		PreparedStatement stmt = null;
		try {
			con = ds.getConnection();
			stmt = con.prepareStatement(query);
			stmt.setInt(1, board.getMb_id());//mb_id
			stmt.setString(2, board.getBr_title());//br_title
			stmt.setString(3, board.getBk_code());//bk_code
			stmt.setString(4, board.getBr_content());//br_content
			stmt.setInt(5, board.getBr_price());//br_price
			stmt.setString(6, board.getSale_purchase());//sale_purchase
			stmt.setString(7, board.getUpFile());//upFile
			
			tmp = stmt.executeUpdate();
			if(tmp == 0) {
				result = false;
			}else {
				result = true;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			close(stmt);
			close(con);
		}
		
		return result;
	}

	public void hitUpdate(String br_num, int mb_id) {
		String query = "update jg_board set hit=hit+1 where br_num=? and mb_id=?";
		
		Connection con = null;
		PreparedStatement stmt = null;
		
		try {
			con = ds.getConnection();
			stmt = con.prepareStatement(query);
			stmt.setInt(1, Integer.parseInt(br_num));
			stmt.setInt(2, mb_id);
			stmt.executeUpdate();
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			close(stmt);
			close(con);
		}
		
	}

	public BoardEntity select(String br_num) {
		BoardEntity board = new BoardEntity();
		
		String query = "select * from jg_board where br_num = ?";
		
		Connection con = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		try {
			con = ds.getConnection();
			stmt = con.prepareStatement(query);
			stmt.setInt(1, Integer.parseInt(br_num));
			
			rs = stmt.executeQuery();
			if(rs.next()) {
				board.setBr_num(rs.getInt("br_num"));
				board.setMb_id(rs.getInt("mb_id"));
				board.setBr_title(rs.getString("br_title"));
				board.setBk_code(rs.getString("bk_code"));
				board.setBr_content(rs.getString("br_content"));
				board.setBr_price(rs.getInt("br_price"));
				board.setSale_purchase(rs.getString("sale_purchase"));
				board.setPurchase_done(rs.getString("purchase_done"));
				board.setHit(rs.getInt("hit"));
				board.setWrite_date(rs.getDate("write_date"));
				board.setUpFile(rs.getString("upFile"));
			}
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			close(rs);
			close(stmt);
			close(con);
		}
		
		return board;
	}

	public boolean update(BoardEntity board) {
		boolean result = false;
		int tmp = 0;
		
		String query = "update jg_board set br_title = ?, br_content = ?, br_price = ? ";
			query += "where br_num = ? and bk_code = ?";
		
		Connection con =null;
		PreparedStatement stmt =null;
		
		try {
			con =ds.getConnection();
			stmt = con.prepareStatement(query);
			stmt.setString(1, board.getBr_title());
			stmt.setString(2, board.getBr_content());
			stmt.setInt(3, board.getBr_price());
			stmt.setInt(4, board.getBr_num());
			stmt.setString(5, board.getBk_code());
			
			
			tmp = stmt.executeUpdate();
			if(tmp == 0) {
				result = false;
			}else {
				result = true;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			close(stmt);
			close(con);
		}
		return result;
	}
}
